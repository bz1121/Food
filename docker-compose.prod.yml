version: '3.8'

# 生产环境Docker Compose配置

services:
  mysql:
    image: mysql:8.0
    container_name: tastefinder-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - tastefinder-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: tastefinder-redis-prod
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    networks:
      - tastefinder-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tastefinder-backend-prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      AMAP_KEY: ${AMAP_KEY}
      AMAP_SECRET: ${AMAP_SECRET}
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    networks:
      - tastefinder-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tastefinder-frontend-prod
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - tastefinder-network
    restart: unless-stopped

volumes:
  mysql_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  tastefinder-network:
    driver: bridge

